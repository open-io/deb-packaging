Source: gunicorn
Section: httpd
Priority: optional
Maintainer: Chris Lamb <lamby@debian.org>
Build-Depends:
 debhelper (>= 9),
 dh-python,
 python (>= 2.6.6-3~),
 python3-all,
Build-Depends-Indep:
 help2man,
 python-setuptools,
 python3-setuptools,
Standards-Version: 3.9.8
Vcs-Git: https://github.com/lamby/pkg-gunicorn
Vcs-Browser: https://github.com/lamby/pkg-gunicorn
X-Python-Version: >= 2.6
X-Python3-Version: >= 3.2
Homepage: http://gunicorn.org/

Package: gunicorn
Architecture: all
Depends:
 python-gunicorn (= ${binary:Version}),
 python-pkg-resources,
 python-setuptools,
 ${misc:Depends},
 ${python:Depends},
Suggests:
 gunicorn-examples (= ${binary:Version}),
 python-gevent,
 python-pastedeploy,
 python-setproctitle,
 python-tornado,
Provides:
 httpd-wsgi,
Description: Event-based HTTP/WSGI server (Python 2 version)
 Green Unicorn (gunicorn) is an HTTP/WSGI server designed to serve fast clients
 or sleepy applications. That is to say; behind a buffering front-end server
 such as nginx or lighttpd.
 .
  * Optional support for Eventlet, Tornado and Gevent to provide asynchronous
    long-polling ("Comet") connections.
  * Process management: Gunicorn reaps and restarts workers that die.
  * Easy integration with Django and Paster compatible applications (Pylons,
    TurboGears 2, etc.
  * Load balancing via pre-fork and a shared socket
  * Graceful worker process restarts
  * Upgrading without losing connections
  * Decode chunked transfers on-the-fly, allowing upload progress notifications
    or stream-based protocols over HTTP
 .
 This is the Python 2 version.

Package: gunicorn3
Architecture: all
Depends:
 python3-gunicorn (= ${binary:Version}),
 ${misc:Depends},
 ${python3:Depends},
Suggests:
 gunicorn-examples (= ${binary:Version}),
 python3-pastedeploy,
 python3-setproctitle,
 python3-tornado,
Description: Event-based HTTP/WSGI server (Python 3 version)
 Green Unicorn (gunicorn) is an HTTP/WSGI server designed to serve fast clients
 or sleepy applications. That is to say; behind a buffering front-end server
 such as nginx or lighttpd.
 .
  * Optional support for Eventlet, Tornado and Gevent to provide asynchronous
    long-polling ("Comet") connections.
  * Process management: Gunicorn reaps and restarts workers that die.
  * Easy integration with Django and Paster compatible applications (Pylons,
    TurboGears 2, etc.
  * Load balancing via pre-fork and a shared socket
  * Graceful worker process restarts
  * Upgrading without losing connections
  * Decode chunked transfers on-the-fly, allowing upload progress notifications
    or stream-based protocols over HTTP
 .
 This is the Python 3 version.

Package: python-gunicorn
Architecture: all
Depends:
 python-pkg-resources,
 python-setuptools,
 ${misc:Depends},
 ${python:Depends},
Breaks:
 gunicorn (<< 19.0-3),
Replaces:
 gunicorn (<< 19.0-3),
Description: Event-based HTTP/WSGI server (Python 2 libraries)
 Green Unicorn (gunicorn) is an HTTP/WSGI server designed to serve fast clients
 or sleepy applications. That is to say; behind a buffering front-end server
 such as nginx or lighttpd.
 .
  * Optional support for Eventlet, Tornado and Gevent to provide asynchronous
    long-polling ("Comet") connections.
  * Process management: Gunicorn reaps and restarts workers that die.
  * Easy integration with Django and Paster compatible applications (Pylons,
    TurboGears 2, etc.
  * Load balancing via pre-fork and a shared socket
  * Graceful worker process restarts
  * Upgrading without losing connections
  * Decode chunked transfers on-the-fly, allowing upload progress notifications
    or stream-based protocols over HTTP
 .
 This is the Python 2 library.

Package: python3-gunicorn
Architecture: all
Depends:
 python3-pkg-resources,
 python3-setuptools,
 ${misc:Depends},
 ${python3:Depends},
Description: Event-based HTTP/WSGI server (Python 3 libraries)
 Green Unicorn (gunicorn) is an HTTP/WSGI server designed to serve fast clients
 or sleepy applications. That is to say; behind a buffering front-end server
 such as nginx or lighttpd.
 .
  * Optional support for Eventlet, Tornado and Gevent to provide asynchronous
    long-polling ("Comet") connections.
  * Process management: Gunicorn reaps and restarts workers that die.
  * Easy integration with Django and Paster compatible applications (Pylons,
    TurboGears 2, etc.
  * Load balancing via pre-fork and a shared socket
  * Graceful worker process restarts
  * Upgrading without losing connections
  * Decode chunked transfers on-the-fly, allowing upload progress notifications
    or stream-based protocols over HTTP
 .
 This is the Python 3 library.

Package: gunicorn-examples
Architecture: all
Depends:
 ${misc:Depends},
 ${python3:Depends},
Replaces:
 gunicorn (<< 19.0-3),
Breaks:
 gunicorn (<< 19.0-3),
Recommends:
 libjs-jquery,
 libjs-jquery-flot,
Description: Event-based HTTP/WSGI server (examples)
 Green Unicorn (gunicorn) is an HTTP/WSGI server designed to serve fast clients
 or sleepy applications. That is to say; behind a buffering front-end server
 such as nginx or lighttpd.
 .
  * Optional support for Eventlet, Tornado and Gevent to provide asynchronous
    long-polling ("Comet") connections.
  * Process management: Gunicorn reaps and restarts workers that die.
  * Easy integration with Django and Paster compatible applications (Pylons,
    TurboGears 2, etc.
  * Load balancing via pre-fork and a shared socket
  * Graceful worker process restarts
  * Upgrading without losing connections
  * Decode chunked transfers on-the-fly, allowing upload progress notifications
    or stream-based protocols over HTTP
 .
 These are the examples.
