Source: python-pyeclib
Section: python
Priority: optional
Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
XSBC-Original-Maintainer: Debian OpenStack <openstack-devel@lists.alioth.debian.org>
Uploaders:
 Julien Danjou <acid@debian.org>,
 Thomas Goirand <zigo@debian.org>,
 Mehdi Abaakouk <sileht@sileht.net>,
 Gonéri Le Bouder <goneri@debian.org>,
 Ondřej Nový <onovy@debian.org>,
Build-Depends:
 debhelper (>= 10),
 dh-python,
 liberasurecode-dev (>= 1.2.0),
 python-all-dev,
 python-setuptools,
 python-six (>= 1.9.0),
 python3-all-dev,
 python3-setuptools,
 python3-six (>= 1.9.0),
Standards-Version: 4.0.1
Vcs-Browser: https://anonscm.debian.org/cgit/openstack/libs/python-pyeclib.git
Vcs-Git: https://anonscm.debian.org/git/openstack/libs/python-pyeclib.git
Homepage: https://github.com/openstack/pyeclib

Package: python-pyeclib
Architecture: any
Depends:
 python-six (>= 1.9.0),
 ${misc:Depends},
 ${python:Depends},
 ${shlibs:Depends},
Description: interface for implementing erasure codes - Python 2.x
 This library provides a simple Python interface for implementing erasure
 codes. To obtain the best possible performance, the underlying erasure code
 algorithms are written in C.
 .
 This library makes use of Jerasure for Reed-Solomon and provides its own flat
 XOR-based erasure code encoder and decoder. Currently, it implements a
 specific class of HD Combination Codes (see "Flat XOR-based erasure codes in
 storage systems: Constructions, efficient recovery, and tradeoffs" in IEEE
 MSST 2010). These codes are well-suited to archival use-cases, have a simple
 construction and require a minimum number of participating disks during
 single-disk reconstruction (think XOR-based LRC code).
 .
 This package contains the Python 2.x module.

Package: python3-pyeclib
Architecture: any
Depends:
 python3-six (>= 1.9.0),
 ${misc:Depends},
 ${python3:Depends},
 ${shlibs:Depends},
Description: interface for implementing erasure codes - Python 3.x
 This library provides a simple Python interface for implementing erasure
 codes. To obtain the best possible performance, the underlying erasure code
 algorithms are written in C.
 .
 This library makes use of Jerasure for Reed-Solomon and provides its own flat
 XOR-based erasure code encoder and decoder. Currently, it implements a
 specific class of HD Combination Codes (see "Flat XOR-based erasure codes in
 storage systems: Constructions, efficient recovery, and tradeoffs" in IEEE
 MSST 2010). These codes are well-suited to archival use-cases, have a simple
 construction and require a minimum number of participating disks during
 single-disk reconstruction (think XOR-based LRC code).
 .
 This package contains the Python 3.x module.
